
import os
from os import environ,getenv
import re
import logging
from logging.handlers import RotatingFileHandler

id_pattern = re.compile(r'^.\d+$')
#--------------------------------------------
#Bot token @Botfather
TG_BOT_TOKEN = os.environ.get("TG_BOT_TOKEN", "8154426339")
APP_ID = int(os.environ.get("APP_ID", "")) #Your API ID from my.telegram.org
API_HASH = os.environ.get("API_HASH", "") #Your API Hash from my.telegram.org
#--------------------------------------------

CHANNEL_ID = int(os.environ.get("CHANNEL_ID", "-1002525477015")) #Your db channel Id
LOG_CHANNEL_ID = int(os.environ.get("LOG_CHANNEL_ID", "-1002196408894"))

OWNER = os.environ.get("OWNER", "Rakibul51624") # Owner username without @
OWNER_ID = int(os.environ.get("OWNER_ID", "7945670631")) # Owner id
#--------------------------------------------
PORT = os.environ.get("PORT", "8001")
#--------------------------------------------
DB_URI = os.environ.get("DATABASE_URL", "")
DB_NAME = os.environ.get("DATABASE_NAME", "PrimeBotz")
#--------------------------------------------
AUTH_CHANNEL = [int(ch) if id_pattern.search(ch) else ch for ch in environ.get('AUTH_CHANNEL', '').split()] 
# give channel id with separate space. Ex: ('-10073828 -102782829 -1007282828')

FSUB_LINK_EXPIRY = int(os.getenv("FSUB_LINK_EXPIRY", "0"))  # 0 means no expiry
BAN_SUPPORT = os.environ.get("BAN_SUPPORT", "https://t.me/Prime_Support_Group")
TG_BOT_WORKERS = int(os.environ.get("TG_BOT_WORKERS", "200"))
#--------------------------------------------
START_PIC = os.environ.get("START_PIC", "https://i.postimg.cc/m27kckYZ/IMG-20251003-110121-638.jpg")
FORCE_PIC = os.environ.get("FORCE_PIC", "https://telegra.ph/file/e292b12890b8b4b9dcbd1.jpg")
#--------------------------------------------

#--------------------------------------------
HELP_TXT = "<b><blockquote>·¥õ ú…™s …™s ·¥Ä…¥ “ì…™ ü·¥á ·¥õ·¥è  ü…™…¥·¥ã  ô·¥è·¥õ ·¥°·¥è Ä·¥ã “ì·¥è Ä @PrimeXBots\n\n‚ùè  ô·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös\n‚îú/start : s·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ\n‚îú/about : ·¥è·¥ú Ä I…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥\n‚îî/help :  ú·¥á ü·¥ò  Ä·¥á ü·¥Ä·¥õ·¥á·¥Ö  ô·¥è·¥õ\n\n s…™·¥ç·¥ò ü è ·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥  ü…™…¥·¥ã ·¥Ä…¥·¥Ö s·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ ·¥ä·¥è…™…¥  ô·¥è·¥õ ú ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥Ä…¥·¥Ö  Ä·¥á“ì Ä·¥ás ú ·¥õ ú·¥Ä·¥õs …™·¥õ....üçø.!\n\n ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è <a href='https://t.me/Prime_Nayem'>·¥ç Ä.·¥ò Ä…™·¥ç·¥á</a></blockquote></b>"
ABOUT_TXT = """<b><blockquote>‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ[ ·¥ç è ·¥Ö·¥á·¥õ·¥Ä…™ üs ]‚îÄ‚îÄ‚îÄ‚îÄ‚çü
‚îú‚çü ·¥ç è …¥·¥Ä·¥ç·¥á : <a href='https://t.me/PrimeStoreXBot'>P Ä…™·¥ç·¥á S·¥õ·¥è Ä·¥áX ô·¥è·¥õ</a>
‚îú‚çü ·¥è·¥°…¥·¥á Ä : <a href='https://t.me/Rakibul51624'>Rakibul</a> 
‚îú‚çü ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä : <a href='https://t.me/prime_Nayem'>·¥ç Ä.·¥ò Ä…™·¥ç·¥á</a> 
‚îú‚çü  ü…™ ô Ä·¥Ä Ä è : <a href='https://docs.pyrogram.org/'>·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç</a>
‚îú‚çü  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á : <a href='https://www.python.org/download/releases/3.0/'>·¥ò è·¥õ ú·¥è…¥ ùüπ</a> 
‚îú‚çü ·¥Ö·¥Ä·¥õ·¥Ä ô·¥ÄÍú±·¥á : <a href='https://www.mongodb.com/'>·¥ç·¥è…¥…¢·¥è ·¥Ö ô</a> 
‚îú‚çü Íú±·¥á Ä·¥†·¥á Ä : <a href='https://t.me/PrimeXBots'>·¥ò Ä…™·¥ç·¥áX ô·¥è·¥õs</a> 
‚îú‚çü Íú±·¥õ·¥Ä·¥õ·¥úÍú± : ·¥†4.8 [ Íú±·¥õ·¥Ä ô ü·¥á ]
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚çü</blockquote></b>"""
#--------------------------------------------
#--------------------------------------------
START_MSG = os.environ.get("START_MESSAGE", "<b> ú·¥á ü ü·¥è {first}\n\n<blockquote> …™ ·¥Ä·¥ç “ì…™ ü·¥á s·¥õ·¥è Ä·¥á  ô·¥è·¥õ, …™ ·¥Ñ·¥Ä…¥ s·¥õ·¥è Ä·¥á “ì…™ ü·¥ás ·¥Ä…¥·¥Ö ·¥è·¥õ ú·¥á Ä ·¥ús·¥á Äs ·¥Ñ·¥Ä…¥ ·¥Ä·¥Ñ·¥Ñ·¥áss …™·¥õ “ì Ä·¥è·¥ç s·¥ò·¥á·¥Ñ…™·¥Ä ü  ü…™…¥·¥ã.</blockquote></b>")
FORCE_MSG = os.environ.get("FORCE_SUB_MESSAGE", " ú·¥á ü ü·¥è {first}\n\n<b>·¥ä·¥è…™…¥ ·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥Ä…¥·¥Ö ·¥õ ú·¥á…¥ ·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥  Ä·¥á ü·¥è·¥Ä·¥Ö button ·¥õ·¥è …¢·¥á·¥õ  è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥áÍú±·¥õ·¥á·¥Ö Íú∞…™ ü·¥á.</b>")

CMD_TXT = """<blockquote><b>¬ª ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:</b></blockquote>

<b>‚Ä∫‚Ä∫ /dlt_time :</b> s·¥á·¥õ ·¥Ä·¥ú·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥õ…™·¥ç·¥á
<b>‚Ä∫‚Ä∫ /check_dlt_time :</b> ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥õ…™·¥ç·¥á
<b>‚Ä∫‚Ä∫ /dbroadcast :</b>  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ ·¥Ö·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ / ·¥†…™·¥Ö·¥á·¥è
<b>‚Ä∫‚Ä∫ /ban :</b>  ô·¥Ä…¥ ·¥Ä ·¥úÍú±·¥á Ä
<b>‚Ä∫‚Ä∫ /unban :</b> ·¥ú…¥ ô·¥Ä…¥ ·¥Ä ·¥úÍú±·¥á Ä
<b>‚Ä∫‚Ä∫ /banlist :</b> …¢·¥á·¥õ  ü…™s·¥õ ·¥èÍú∞  ô·¥Ä…¥…¥·¥á·¥Ö ·¥úÍú±·¥á Äs
<b>‚Ä∫‚Ä∫ /addchnl :</b> ·¥Ä·¥Ö·¥Ö Íú∞·¥è Ä·¥Ñ·¥á s·¥ú ô ·¥Ñ ú·¥Ä…¥…¥·¥á ü
<b>‚Ä∫‚Ä∫ /delchnl :</b>  Ä·¥á·¥ç·¥è·¥†·¥á Íú∞·¥è Ä·¥Ñ·¥á s·¥ú ô ·¥Ñ ú·¥Ä…¥…¥·¥á ü
<b>‚Ä∫‚Ä∫ /listchnl :</b> ·¥†…™·¥á·¥° ·¥Ä·¥Ö·¥Ö·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á üs
<b>‚Ä∫‚Ä∫ /fsub_mode :</b> ·¥õ·¥è…¢…¢ ü·¥á Íú∞·¥è Ä·¥Ñ·¥á s·¥ú ô ·¥ç·¥è·¥Ö·¥á
<b>‚Ä∫‚Ä∫ /pbroadcast :</b> s·¥á…¥·¥Ö ·¥ò ú·¥è·¥õ·¥è ·¥õ·¥è ·¥Ä ü ü ·¥úÍú±·¥á Äs
<b>‚Ä∫‚Ä∫ /add_admin :</b> ·¥Ä·¥Ö·¥Ö ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥
<b>‚Ä∫‚Ä∫ /deladmin :</b>  Ä·¥á·¥ç·¥è·¥†·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥
<b>‚Ä∫‚Ä∫ /admins :</b> …¢·¥á·¥õ  ü…™s·¥õ ·¥èÍú∞ ·¥Ä·¥Ö·¥ç…™…¥s
"""
#--------------------------------------------
CUSTOM_CAPTION = os.environ.get("CUSTOM_CAPTION", " ") #set your Custom Caption here, Keep None for Disable Custom Caption

PROTECT_CONTENT = True if os.environ.get('PROTECT_CONTENT', "False") == "True" else False #set True if you want to prevent users from forwarding files from bot
#--------------------------------------------
#Set true if you want Disable your Channel Posts Share button **None
DISABLE_CHANNEL_BUTTON = os.environ.get("DISABLE_CHANNEL_BUTTON", None) == 'True'
#--------------------------------------------
BOT_STATS_TEXT = "<b>BOT UPTIME</b>\n{uptime}"
USER_REPLY_TEXT = " ô·¥Ä·¥ã·¥ã·¥Ä !  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥ç è Íú±·¥á…¥·¥ò·¥Ä…™!!"
#--------------------------------------------


LOG_FILE_NAME = "filesharingbot.txt"

logging.basicConfig(
    level=logging.INFO,
    format="[%(asctime)s - %(levelname)s] - %(name)s - %(message)s",
    datefmt='%d-%b-%y %H:%M:%S',
    handlers=[
        RotatingFileHandler(
            LOG_FILE_NAME,
            maxBytes=50000000,
            backupCount=10
        ),
        logging.StreamHandler()
    ]
)
logging.getLogger("pyrogram").setLevel(logging.WARNING)


def LOGGER(name: str) -> logging.Logger:
    return logging.getLogger(name)
   
